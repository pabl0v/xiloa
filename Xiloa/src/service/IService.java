package service;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import security.Authority;
import support.Departamento;
import support.Ifp;
import support.Item;
import support.Municipio;
import support.UCompetencia;
import support.USolicitud;
import support.UsuarioExterno;
import model.Actividad;
import model.Archivo;
import model.Bitacora;
import model.Certificacion;
import model.Contacto;
import model.Evaluacion;
import model.EvaluacionGuia;
import model.Guia;
import model.Instrumento;
import model.Laboral;
import model.Mantenedor;
import model.Pais;
import model.Requisito;
import model.Rol;
import model.Solicitud;
import model.Usuario;

public interface IService {

	public Map<Long, Pais> getCatalogoPaises();
	public Map<Integer, Departamento> getCatalogoDepartamentos();
	public Map<Integer, Mantenedor> getCatalogoEstadosEvaluacion();
	public Map<Integer, Mantenedor> getCatalogoPortafolio();
	public Map<Integer, Mantenedor> getCatalogoEstadoSolicitud();
	public Map<Integer, Mantenedor> getCatalogoGenero();
	public Map<Integer, Mantenedor> getCatalogoEstatusCertificacion();
	public Map<Integer, Mantenedor> getCatalogoTiposActividad();
	public Map<Integer, Mantenedor> getCatalogoEstatusActividad();
	public Map<Integer, Mantenedor> getCatalogoTiposInstrumento();
	public Map<Integer, Mantenedor> getCatalogoTiposDatosLaborales();
	public String getCompetenciaDescripcion(Long codigo);
	public Contacto getContactoByLogin(String login);
	public Contacto getContactoLocalByLogin(String login);
	public Contacto getContactoInatecByLogin(String login);
	public Collection<Authority> getAuthoritiesInatecByRolId(Integer rolId);
	public Collection<Authority> getAuthoritiesInatecByLogin(String login);
	public List<Rol> getRoles();
	public List<Instrumento> getInstrumentos(Integer entidadId);
	public boolean existeUsuario(String usuario);
	public Usuario registrarAcceso(Usuario usuario); 
	public void resetPassword(String usuario);
	public void registrarUsuarioExterno(UsuarioExterno usuario);
	public Map<Long, Item> getCatalogoUnidades();
	public List<Certificacion> getCertificaciones(Integer entidadId);
	public List<Certificacion> getCertificacionesActivas(Integer parametro, String valor);
	public Map<Long, String> getUnidadesByEstructuraId(Integer estructura);
	public List<Mantenedor> getMantenedores();
	public List<Mantenedor> getMantenedoresByTipo(Integer tipo);
	public Map<Integer, Mantenedor> getMapMantenedoresByTipo(String tipo);
	public Map<Integer, Departamento> getDepartamentosByInatec();
	public Map<Integer, Municipio> getMunicipioDptoByInatec(Integer idDpto);
	public List<Actividad> getActividades(Long certificacionId);
	public List<Actividad> getActividadesByEntidadId(Integer entidadId);
	public List<Mantenedor> getMantenedorActividades();
	public List<Mantenedor> getMantenedorEstatusCertificacion();
	public Rol getRolById(int id);
	public Contacto generarNuevoContactoInatec(String usuario);
	public boolean isNuevoContactoInatec(String usuario);
	public Certificacion guardarCertificacion(Certificacion certificacion, List<Requisito> requisitos);
	public List<Requisito> getRequisitos(int certificacionId);
	public void updateRequisito(Requisito requisito);
	public List<Usuario> getUsuarios();
	public void updateUsuario(Usuario usuario);
	public List<UCompetencia> getUcompetenciaSinPlanificar(Integer entidadId);
	public List<Contacto> getContactosInatec(Integer entidadId);
	public Usuario getUsuarioLocal(String usuario);
	public Usuario getUsuarioInatec(String usuario);	
	public void RegistrarUsuarioOpenId(String login, String nombre, String apellido, String email);
	public List<USolicitud> getUSolicitudes ();
	public List<Solicitud> getSolicitudes();
	public List<Solicitud> getSolicitudesByParam(HashMap<String, Object> param);
	public List<Solicitud> getSolicitudesByNQParam(String nQuery, Object [] parametros);
	public Certificacion getCertificacionById(Long id);
	public Contacto getContactoByCedula(String cedula);
	public Object guardar(Object obj);	
	public List<Certificacion> getCertificacionesByIdIfp(Integer id);
	public List<Ifp> getIfpByInatec ();
	public List<Laboral> getListLaboralByTipo(Integer tipo, Contacto contacto);
	public Laboral getLaboralById(Long idLaboral);
	public List<Evaluacion> getEvaluaciones(Solicitud solicitud);
	public Solicitud getSolicitudById(Long idSolicitud);
	public List<Long> getUnidadesByCertificacionId(Long certificacionId);
	public List<Instrumento> getInstrumentosByCertificacionId(Long certificacionId);
	public Instrumento getInstrumentoById(Long idInstrumento);
	public List<Instrumento> getInstrumentoByUnidad (Long idUnidad);
	public List<EvaluacionGuia> getEvaluacionGuiaByEvaluacionId(Long evaluacionId);
	public List<Instrumento> getIntrumentoByEvaluacion(Long evaluacionId);
	public Mantenedor getMantenedorMinByTipo(String tipo);
	public Mantenedor getMantenedorMaxByTipo(String tipo);
	public Mantenedor getMantenedorById(Integer idMantenedor);	
	public List<Guia> getGuiaByParam(String namedString, Object [] parametros);
	public List<Archivo> getArchivoByParam (String namedString, Object [] parametros);
	public List<Bitacora> getBitacoras(Long actividadId);
	public List<Requisito> getRequisitos(int cursoId, int centroId);
	public List<Long> getUnidades();
	public Archivo getArchivoOneByParam (String namedString, Object [] parametros);
	public List<Pais> getPaises ();
	public Pais getPaisByNQParam(String namedString, Object [] param);
	public boolean portafolioVerificado(Contacto contacto, String tipoEstadoPortafolio);
	public Evaluacion guardarEvaluacion(Evaluacion eval, Guia [] guias);
	public EvaluacionGuia updateEvaluacionGuia(EvaluacionGuia evalGuia);
	public boolean validaListoInscripcion(Solicitud solicitud);
	public Connection getSqlConnection() throws SQLException;
	public void imprimirReporte(String nombreReporte, Map<String,Object> parametros, String formato, boolean visualiza) throws SQLException;
	public List<Solicitud> filtraListaSolicitudes(HashMap<String, Object> param, Integer tipoFiltro);
	public boolean validaProcesoConcluido(Solicitud solicitud, boolean validaEvaluacion);
	public boolean validaEvaluacionAprobada(Solicitud solicitud);
}